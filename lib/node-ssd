#! /usr/bin/env node
console.log('Starting Node');
console.log('Setting Node timer');
let i = 0;
setInterval(() => {
    console.log('Node is alive', ++i);
}, 1000);
const ss = require('bindings')('ss.node');
console.log('Have SSD', ss);

const cosmos = ss.start((port, str, replier) => {
    console.error('Node received', str);
    const action = JSON.parse(str);
    switch (action.type) {
    case 'SET_NAME':
        action.value = action.value.toUpperCase();
        setTimeout(() => {
            console.log('Delayed, now sending to cosmos');
            const val = ss.send(cosmos, JSON.stringify(action));
            console.log('Got from cosmos', JSON.stringify(val));
            console.log('Have replier', replier);
            replier.resolve(val);
        }, 3000);
        console.log('Returning immediately from Javascript');
        return 'Immediate!';
    }
    replier.reject(JSON.stringify({type: "ERROR", value: `Unknown action.type ${action.type}`}));
}, process.argv.slice(1));

console.log('Got from SSD', ss.send(cosmos, "Hello from node proper!"));
